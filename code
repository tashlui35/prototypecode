#include <Servo.h>
#define second 1000
#define minute 60000
#define hour 3600000

Servo servo;
const int servoPin = 5;
const int servingsSizePin = A0;
const int numberofServingsPin = A2;
const int minMoveTime = 130;
const int minServing = 300;
int servingTime = 12555; // 12555 – 1 cup, 25110 – 2 cup, 37665 – 3 cup, 50220 – 4 cup
int servingDelta = 150;
int jerkPeriod = 1200; // 1000/1000 – 9g, 1000/500 – 7g, 1400/700 – 12g
int feedingTimes = 0;
unsigned long lastFeeding=0;

void setup ()
{
    Serial.begin(57600);
    pinMode(servingsSizePin, INPUT_PULLUP);
    pinMode(numberofServingsPin, INPUT_PULLUP);
    buzz();
}

void loop () 
{

  int sizeVal = digitalRead(servingsSizePin);
  if(sizeVal == 0){
    int servingTime = 12555;
    delay(1000);
      buzz();
    }    

    if(sizeVal == 60){
    int servingTime = 25110;
    delay(1000);
      buzz();
    }    
    
    if(sizeVal == 120){
    int servingTime = 37665;
    delay(1000);
      buzz();
    }       
    
    if(sizeVal == 180){
    int servingTime = 50220;
    delay(1000);
      buzz();
    }    
    
  int timesVal = digitalRead(numberofServingsPin);
  if(timesVal == LOW){
      if(millis() - lastFeeding>24*hour)//
        dispense(servingTime);
      delay(10);
      }
  if(timesVal == HIGH){
      if(millis() - lastFeeding>1*minute)//
        dispense(servingTime);
      delay(10);
      }
  }

#define countof(a) (sizeof(a) / sizeof(a[0]))

void dispense(int dispenseTime)
{
  lastFeeding = millis();
  servo.attach(servoPin);
  for(;dispenseTime>0;dispenseTime-=jerkPeriod){
    servo.write(100);
    delay(dispenseTime>=jerkPeriod ? jerkPeriod : dispenseTime%1000);
    jerk();
  }
  stop();
}

void jerk()
{
  servo.write(0);
  delay(minMoveTime);
  servo.write(180);
  delay(minMoveTime);
}

void stop()
{
  servo.write(90);
  delay(100);
  servo.detach();
}

void buzz()
{
  servo.attach(servoPin);
  servo.write(0);
  delay(50);
  jerk();
  jerk();
  stop();
}
